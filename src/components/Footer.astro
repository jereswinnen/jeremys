---
import { getCollection } from "astro:content";
import Button from "./Button.astro";

// Fetch the latest music entry
const music = await getCollection("music");
const latestTrack = music.sort(
  (a: any, b: any) => b.data.date.getTime() - a.data.date.getTime()
)[0];
---

<footer
  data-speed="1.5"
  class="col-span-full grid grid-cols-subgrid pt-6 pb-16 h-[50vh] border-t border-stone-900 dark:border-white/20"
>
  <div
    class="col-span-full grid grid-cols-subgrid h-full justify-items-stretch"
  >
    <header class="col-span-full grid grid-cols-subgrid">
      <article class="col-span-2 flex flex-col gap-3 text-balance">
        <p>
          Thanks for visiting! Interested in collaborating on your app or
          website? Feel free to contact me.
        </p>
      </article>
      <div class="col-span-6 flex items-center gap-6 justify-end">
        <div class="flex items-center gap-1">
          <span>Local time</span>
          <span class="font-[system-ui,sans-serif] opacity-50">&rarr;</span>
          <span data-currentTime></span>
        </div>
        <span class="opacity-70">&copy; 2025</span>
      </div>
    </header>
    <div class="col-span-full grid grid-cols-subgrid content-end">
      <Button
        data-copyEmail
        class="col-span-7 self-end w-fit h-fit tracking-tight !px-[6vw] !pb-[1.5vw] !text-[8vw] !normal-case !border-[0.2vw]"
        href="mailto:hey@jeremys.be"
        label="hey@jeremys.be"
      />

      <div class="col-span-1 flex justify-end">
        <div class="flex flex-col gap-2 items-center">
          <span
            class="[writing-mode:vertical-lr] text-right text-sm font-medium"
            >{latestTrack.data.title} &mdash; {latestTrack.data.artist}</span
          >
          <div class="relative inline-block overflow-hidden w-7 h-7">
            <img
              class="vinylMask block w-full h-full object-cover"
              src={latestTrack.data.albumCover}
              alt={`${latestTrack.data.title} album cover`}
            />
          </div>
        </div>
      </div>
    </div>
  </div>
</footer>

<script>
  function updateTime() {
    const options: Intl.DateTimeFormatOptions = {
      hour: "2-digit",
      minute: "2-digit",
      hour12: false,
      timeZone: "Europe/Brussels",
    };

    const timeElements = document.querySelectorAll("[data-currentTime]");

    timeElements.forEach((el) => {
      if (el instanceof HTMLElement) {
        const timeString = new Intl.DateTimeFormat("en-GB", options).format(
          new Date()
        );
        el.innerHTML = timeString.replace(":", `<span class="blink">:</span>`);
      }
    });
  }

  function toggleBlink() {
    document.querySelectorAll(".blink").forEach((colon) => {
      if (colon instanceof HTMLElement) {
        colon.style.opacity = colon.style.opacity === "0" ? "1" : "0";
      }
    });
  }

  setInterval(updateTime, 60000);
  setInterval(toggleBlink, 800);
  updateTime();
</script>
