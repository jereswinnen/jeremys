---
const { class: className, ...rest } = Astro.props;
const currentPath = Astro.url.pathname;

const navItems = [
  { path: "/", label: "Works" },
  { path: "/info", label: "Information" },
  { path: "/feed", label: "Feed" },
  // { path: "/contact", label: "Contact" },
  { path: "mailto:hey@jeremys.be", label: "hey@jeremys.be" },
];
---

<nav class:list={["relative z-[1000] pt-2", className]} {...rest}>
  <ul class="flex gap-6">
    {
      navItems.map(({ path, label }) => (
        <li class="flex flex-col flex-1 group">
          <a
            href={path}
            class:list={[
              "relative flex-1 justify-between pb-8 font-medium text-sm",
              currentPath === path && "font-semibold",
            ]}
          >
            {label}
          </a>
          <div class="relative bottom-0 left-0 w-full h-[1px] [&>*]:absolute [&>*]:block [&>*]:h-full">
            <span class="w-0 bg-stone-950 dark:bg-white transition-all duration-500 ease-circ group-hover:w-full" />
            <span
              class:list={[
                "w-full bg-stone-950/20 dark:bg-white/20",
                currentPath === path && "!bg-stone-950 dark:!bg-white",
              ]}
            />
          </div>
        </li>
      ))
    }
  </ul>
</nav>

<style lang="scss">
  nav:before {
    position: fixed;
    top: 0;
    width: 100%;
    height: 100px;
    content: "";
    background: linear-gradient(to top, transparent, rgb(252, 252, 252));
    mask-image: linear-gradient(to bottom, rgb(252, 252, 252) 25%, transparent);
    backdrop-filter: blur(1.5px);
    pointer-events: none;
    @media (prefers-color-scheme: dark) {
      background: linear-gradient(to top, transparent, rgb(0, 0, 0));
      mask-image: linear-gradient(to bottom, rgb(0, 0, 0) 25%, transparent);
    }
  }
</style>
