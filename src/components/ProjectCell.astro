---
import { Picture } from "astro:assets";
import { getProjectImage } from "../utils/projectUtils";
import type { CollectionEntry } from "astro:content";

interface Props {
  project: CollectionEntry<"work">["data"];
}

interface ImageBlock {
  type: "image";
  src: string;
  caption?: string;
  colSpan?: number;
  mdColSpan?: number;
  lgColSpan?: number;
}

const { project } = Astro.props;

// Get all images from blocks
const imageBlocks = project.blocks.filter(
  (block: any): block is ImageBlock => block.type === "image"
);
const processedImages = await Promise.all(
  imageBlocks.map(async (block: ImageBlock) => ({
    image: await getProjectImage(project.name, block.src),
    caption: block.caption,
    colSpan: block.colSpan,
    mdColSpan: block.mdColSpan,
    lgColSpan: block.lgColSpan,
  }))
);
---

<section
  class="o-grid--inner pt-6 border-t border-zinc-950 dark:border-white/20"
>
  <div class="col-span-3">
    <h3 class="t--hero">{project.name}</h3>
  </div>
  <div class="col-span-3">
    <p class="opacity-60">
      {project.startDate} â€” {project.endDate}
    </p>
  </div>

  <div class="col-span-full mt-6 o-grid--inner">
    {
      processedImages.map((item) => (
        <div
          class={`p-8 bg-stone-100 dark:bg-stone-900
            ${item.colSpan ? `col-span-${item.colSpan}` : "col-span-3"}
            ${item.mdColSpan ? `md:col-span-${item.mdColSpan}` : ""}
            ${item.lgColSpan ? `lg:col-span-${item.lgColSpan}` : ""}`}
        >
          <div class="flex flex-col items-center">
            <Picture
              src={item.image}
              alt={item.caption || project.name}
              formats={["avif", "webp"]}
              class="max-h-[70vh] lg:max-h-[50vh] object-contain"
            />
            {item.caption && (
              <p class="text-sm font-medium text-center opacity-60">
                {item.caption}
              </p>
            )}
          </div>
        </div>
      ))
    }
  </div>
</section>
