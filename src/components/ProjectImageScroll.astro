---
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";

interface Props {
  work: CollectionEntry<"work">[];
}

const { work } = Astro.props;

if (!Array.isArray(work) || work.length === 0) {
  return null;
}

const formatProjectName = (name: string) =>
  name.toLowerCase().replace(/\s+/g, "");

const allImages = work
  .flatMap((project) =>
    project.data.artwork.map((art: any) => ({
      ...art,
      projectName: project.data.name,
      projectUrl: `/work/${formatProjectName(project.data.name)}`,
    }))
  )
  .sort(() => Math.random() - 0.5);
---

<div class="relative w-full overflow-hidden group">
  <div
    class="flex gap-4 animate-scroll px-4 group-hover:[animation-play-state:paused] ease-in-out"
  >
    {
      [...allImages, ...allImages].map((image, index) => (
        <a
          href={image.projectUrl}
          class="relative flex-none h-fit transition-all duration-500 ease-in-out group-hover:opacity-60 hover:!opacity-100"
          aria-label={`View ${image.projectName} project`}
        >
          <Image
            src={`/src/assets/projects/${formatProjectName(image.projectName)}/${image.src}`}
            alt={image.caption || `Image from ${image.projectName}`}
            width={500}
            height={500}
            class="h-[500px] w-auto object-contain rounded-lg shadow-lg"
            loading="lazy"
          />
          <p>{image.projectName}</p>
        </a>
      ))
    }
  </div>
</div>

<style>
  @keyframes scroll {
    0% {
      transform: translateX(0);
    }
    100% {
      transform: translateX(-50%);
    }
  }

  .animate-scroll {
    animation: scroll 300s linear infinite;
    width: fit-content;
  }
</style>
