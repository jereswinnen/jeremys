---
import { Picture } from "astro:assets";
import { getProjectImage } from "../utils/projectUtils";
import type { CollectionEntry } from "astro:content";

const { project } = Astro.props;

interface Props {
  project: CollectionEntry<"work">["data"];
}

const processedImages =
  project.artwork?.map((item: any) => ({
    imageSrc: item.src,
    caption: item.caption,
    colSpan: item.colSpan,
    mdColSpan: item.mdColSpan,
    lgColSpan: item.lgColSpan,
  })) ?? [];
---

<section
  class="col-span-full grid grid-cols-subgrid !gap-[calc(var(--u-grid-gap)/2)] pt-6 border-t border-stone-900 dark:border-white/20"
>
  <header
    class="col-span-full grid grid-cols-subgrid text-sm divide-y divide-stone-900/20 dark:divide-white/20 md:divide-none [&>*]:flex [&>*]:flex-col [&>*]:gap-1 [&>*]:py-4 [&>*]:md:py-0 [&>*:first-child]:pt-0 [&>*:last-child]:pb-0 [&>*>*:first-child]:mb-0 [&>*>*:first-child]:opacity-70 [&>*>*:last-child]:font-medium"
  >
    <div><p>Name</p><p>{project.name}</p></div>
    <div class="col-span-2">
      <p>Info</p><p class="!font-normal text-base">{project.description}</p>
    </div>
    <div class="col-span-full md:!col-span-2 md:!col-start-6">
      <p>Role</p><p>{project.role}</p>
    </div>
    <div class="col-span-full md:!col-span-1 md:!col-start-8">
      <p>Timeframe</p>
      <div class="flex gap-1">
        <span>{project.startDate}</span>
        <span class="font-[system-ui,sans-serif] font-normal opacity-50"
          >&rarr;</span
        >
        <span>{project.endDate}</span>
      </div>
    </div>
  </header>

  <div
    class="col-span-full grid grid-cols-subgrid !gap-[calc(var(--u-grid-gap)/5)]"
  >
    {
      processedImages.map(async (item: any) => {
        const image = await getProjectImage(project.name, item.imageSrc);
        return (
          <figure
            class={`flex flex-col justify-center items-center p-8 md:p-12 bg-stone-50 dark:bg-stone-900/50
            ${item.colSpan ? `col-span-${item.colSpan}` : ""}
            ${item.mdColSpan ? `md:col-span-${item.mdColSpan}` : ""}
            ${item.lgColSpan ? `lg:col-span-${item.lgColSpan}` : ""}`}
          >
            <img
              data-imageReveal
              class="max-h-[60vh] lg:max-h-[40vh] object-contain"
              loading="lazy"
              src={image.src}
              alt={item.caption || project.name}
            />
            {/* <Picture
                data-imageBlurReveal
                loading="lazy"
                decoding="async"
                src={image}
                alt={item.caption || project.name}
                formats={["avif", "webp"]}
                class="max-h-[60vh] lg:max-h-[40vh] object-contain"
              /> */}
            {/* {item.caption && (
              <figcaption class="text-sm font-medium text-center opacity-60">
                <p>{item.caption}</p>
              </figcaption>
            )} */}
          </figure>
        );
      })
    }
  </div>
</section>
