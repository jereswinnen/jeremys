---
import { Picture } from "astro:assets";
import { getProjectImage } from "../utils/projectUtils";
import type { CollectionEntry } from "astro:content";

interface Props {
  project: CollectionEntry<"work">["data"];
}

const { project } = Astro.props;

// Pre-load images for image blocks
const processedBlocks = await Promise.all(
  project.blocks.map(async (block) => {
    if (block.type === "image") {
      return {
        ...block,
        image: await getProjectImage(project.name, block.src),
      };
    }
    return block;
  })
);
---

<section
  id={project.name.toLowerCase()}
  class="flex flex-col gap-y-[calc(var(--u-grid-gap)/5)]"
>
  <header
    class="p3 flex items-center justify-between bg-stne-100/90 dark:bg-stne-900/90"
  >
    <div class="flex flex-col">
      <!-- <h2 class="font-semibold text-base">{project.name}</h2> -->
      <h2 class="t--hero dark:text-white"><em>{project.name}</em></h2>
      <!-- <p class="text-sm opacity-60">{project.tagline}</p> -->
    </div>
    <a
      class="inline-block px-2.5 py-1 rounded-full border border-stone-200 dark:border-stone-700 font-medium"
      href={`#${project.name.toLowerCase()}-case`}>More info</a
    >
  </header>

  <div class="o-grid-inner !gap-[calc(var(--u-grid-gap)/5)]">
    {
      processedBlocks.map((block) => (
        <div
          class={`${
            block.type === "image" ? "p-8" : "p-16"
          } bg-stone-100 dark:bg-stone-900 ${block.colSpan ? `col-span-${block.colSpan}` : ""}
    ${block.mdColSpan ? `md:col-span-${block.mdColSpan}` : ""}
    ${block.lgColSpan ? `lg:col-span-${block.lgColSpan}` : ""}`.trim()}
          id={
            block.type === "context" && block.highlighted
              ? `${project.name.toLowerCase()}-case`
              : undefined
          }
        >
          {block.type === "image" ? (
            <div class="flex flex-col items-center">
              <Picture
                src={block.image}
                alt={block.caption || project.name}
                formats={["avif", "webp"]}
                class="max-h-[70vh] lg:max-h-[50vh] object-contain"
              />
              {block.caption && (
                <p class="text-sm font-medium text-center opacity-60">
                  {block.caption}
                </p>
              )}
            </div>
          ) : (
            <article class="text-center text-balance">
              {block.title && <p class="">{block.title}</p>}
              {/* <p class="text-3xl leading-snug font-serif">{block.content}</p> */}
              <p class="t--prose">{block.content}</p>
            </article>
          )}
        </div>
      ))
    }
  </div>
</section>
