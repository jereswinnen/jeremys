---
import { Picture } from "astro:assets";
import { getProjectImage } from "../utils/projectUtils";
import type { CollectionEntry } from "astro:content";

interface Props {
  project: CollectionEntry<"work">["data"];
}

const { project } = Astro.props;

// Pre-load images for image blocks
const processedBlocks = await Promise.all(
  project.blocks.map(async (block) => {
    if (block.type === "image") {
      return {
        ...block,
        image: await getProjectImage(project.name, block.src),
      };
    }
    return block;
  })
);
---

<article class="flex flex-col gap-4">
  <header>
    <h2>{project.name}</h2>
    <p>{project.tagline}</p>
  </header>

  <div class="o-grid-inner">
    {
      processedBlocks.map((block) => (
        <div
          class={`${block.colSpan ? `col-span-${block.colSpan}` : ""}
            ${block.mdColSpan ? `md:col-span-${block.mdColSpan}` : ""}
            ${block.lgColSpan ? `lg:col-span-${block.lgColSpan}` : ""}`.trim()}
        >
          {block.type === "image" ? (
            <div class="bg-indigo-900">
              <Picture
                src={block.image}
                alt={block.caption}
                formats={["avif", "webp"]}
              />
              <p>{block.caption}</p>
            </div>
          ) : (
            <article class="bg-neutral-900 p-4 h-full">
              <h3 class="text-lg font-medium mb-2">{block.title}</h3>
              <p class="text-neutral-400">{block.content}</p>
            </article>
          )}
        </div>
      ))
    }
  </div>
  <!-- <footer>
    <div class="project-details">
      {
        project.details.map((detail) => (
          <div class="detail-item">
            <h3>{detail.title}</h3>
            <p>{detail.content}</p>
          </div>
        ))
      }
    </div>
    <a
      href={project.linkAction}
      class="project-link"
      target="_blank"
      rel="noopener noreferrer"
    >
      {project.linkLabel}
    </a>
  </footer> -->
</article>
