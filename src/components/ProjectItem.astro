---
import { Picture } from "astro:assets";
import { getProjectImage } from "../utils/projectUtils";
import type { CollectionEntry } from "astro:content";

interface Props {
  project: CollectionEntry<"work">["data"];
}

const { project } = Astro.props;

// Pre-load images for image blocks
const processedBlocks = await Promise.all(
  project.blocks.map(async (block) => {
    if (block.type === "image") {
      return {
        ...block,
        image: await getProjectImage(project.name, block.src),
      };
    }
    return block;
  })
);
---

<section class="flex flex-col gap-y-[calc(var(--u-grid-gap)/5)]">
  <header class="p-3 bg-stone-100 dark:bg-stone-800">
    <h2 class="font-semibold text-base">{project.name}</h2>
    <p class="text-sm opacity-60">{project.tagline}</p>
  </header>

  <div class="o-grid-inner !gap-[calc(var(--u-grid-gap)/5)]">
    {
      processedBlocks.map((block) => (
        <div
          class={`p-8 bg-stone-100 dark:bg-stone-800 ${block.colSpan ? `col-span-${block.colSpan}` : ""}
            ${block.mdColSpan ? `md:col-span-${block.mdColSpan}` : ""}
            ${block.lgColSpan ? `lg:col-span-${block.lgColSpan}` : ""}`.trim()}
        >
          {block.type === "image" ? (
            <div class="flex flex-col items-center">
              <Picture
                src={block.image}
                alt={block.caption}
                formats={["avif", "webp"]}
                class="max-h-[70vh] object-contain"
              />
              <p>{block.caption}</p>
            </div>
          ) : (
            <article class="bg-orange-900">
              <h3>{block.title}</h3>
              <p>{block.content}</p>
            </article>
          )}
        </div>
      ))
    }
  </div>
</section>
