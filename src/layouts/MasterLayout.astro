---
import "../assets/styles/global.scss";
import Aside from "../components/Aside.astro";
import Header from "../components/Header.astro";

const { title, description, theme, layout } = Astro.props;
---

<!doctype html>
<html lang="en" class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>
      {title ? `${title} | Jeremy Swinnen` : "Jeremy Swinnen"}
    </title>
    {description && <meta name="description" content={description} />}
  </head>
  <body
    class={`${theme ? theme : ""} o-container font-sans bg-white dark:bg-stone-950 text-stone-900 dark:text-white/85 selection:bg-stone-200 selection:dark:bg-stone-400`}
  >
    <div class={`o-grid o-grid--${layout || "default"}`}>
      {layout === "home" && <Aside class="md:sticky md:top-0" />}
      <main class="o-grid--inner outline-none">
        <Header
          data-blurRevealFromTop
          class="md:sticky md:top-0 col-span-full"
          logo={layout === "home" ? false : true}
        />
        <slot />
      </main>
      <footer
        data-footerScrollExpand
        class="o-grid--bleed col-span-full bg-stone-950 text-white py-16"
      >
        <div data-footerContent class="o-grid o-grid--default">
          <header class="col-span-full o-grid--inner">
            <p class="col-span-2 text-balance">
              I'm currently available for new projects. Interested in working
              together?
            </p>
            <div class="col-span-6 flex gap-6 items-center justify-end">
              <span id="current-time"></span>
              <span class="opacity-60">&copy;2025</span>
            </div>
          </header>
          <article class="col-span-3">
            <p>This is some footer content</p>
          </article>
          <img
            class="col-span-3"
            src="https://images.unsplash.com/photo-1735149050406-76f49ced66e1?q=80&w=5232&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
            alt=""
          />
        </div>
      </footer>
    </div>
  </body>
</html>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const cursor = document.createElement("div");
    cursor.classList.add("animated-cursor");
    document.body.style.cursor = "none";
    document.body.appendChild(cursor);

    document.addEventListener("mousemove", (e) => {
      cursor.style.left = `${e.clientX}px`;
      cursor.style.top = `${e.clientY}px`;
    });
  });
</script>

<script>
  function updateTime() {
    const options: Intl.DateTimeFormatOptions = {
      hour: "2-digit",
      minute: "2-digit",
      hour12: true,
      timeZone: "Europe/Brussels",
    };

    // Ensure the element exists and is of the correct type
    const timeElement = document.getElementById(
      "current-time"
    ) as HTMLSpanElement | null;
    if (timeElement) {
      const time = new Date().toLocaleString("en-GB", options);
      timeElement.textContent = time;
    }
  }

  // Update time every minute
  setInterval(updateTime, 60000);

  // Initial call to set time immediately
  updateTime();
</script>

<script>
  import {
    // typewriterEffect,
    // imageClipFromBottom,
    // textBlurFadeIn,
    // imageBlurReveal,
    // projectListImageReveal,
    // blurRevealFromTop,
    // blurRevealFromBottom,
    // blurRevealFromLeft,
    footerScrollExpand,
  } from "../assets/scripts/gsapAnimations.js";
  // typewriterEffect();
  // imageClipFromBottom();
  // textBlurFadeIn();
  // imageBlurReveal();
  // projectListImageReveal();
  // blurRevealFromTop();
  // blurRevealFromBottom();
  // blurRevealFromLeft();
  footerScrollExpand();
</script>
