---
import MasterLayout from "../layouts/MasterLayout.astro";
import Shader from "../components/Shader.astro";
import { getCollection } from "astro:content";
const title = "Profile";
const work = await getCollection("work");

const projectsOrder = [
  "gamepal",
  "helpper",
  "scorecard",
  "realo",
  "shelf",
  "immo brown",
  "diabetik",
];

const sortedWork = work.sort((a: any, b: any) => {
  const orderA = projectsOrder.indexOf(a.data.name.toLowerCase());
  const orderB = projectsOrder.indexOf(b.data.name.toLowerCase());
  return orderA - orderB;
});
---

<MasterLayout title={title}>
  <article class="col-span-full o-grid-inner">
    <h1 class="col-span-full">
      Designer and developer from Belgium with 15+ years of experience in
      digital product design.
    </h1>
    <div class="col-start-4 col-span-3">
      <Shader
        sources={[
          {
            srcset:
              "https://images.unsplash.com/photo-1737490419228-0ba705903a23?q=80&w=2760&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
            type: "image/avif",
          },
          {
            srcset:
              "https://images.unsplash.com/photo-1737490419228-0ba705903a23?q=80&w=2760&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
            type: "image/webp",
          },
        ]}
        fallbackSrc="https://images.unsplash.com/photo-1737490419228-0ba705903a23?q=80&w=2760&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
        alt="Hi there!"
      />
    </div>
    <!-- <picture class="col-start-4 col-span-3">
      <source srcset="/images/profileShot.avif" type="image/avif" />
      <source srcset="/images/profileShot.webp" type="image/webp" />
      <img src="/images/profileShot.jpg" alt="Hi there!" />
    </picture> -->
  </article>
  <section class="col-span-full o-grid-inner">
    <header class="col-span-3">
      <h2 class="t--hero dark:text-white">About <em>me</em></h2>
    </header>
    <article class="col-span-3 text-lg">
      <p>
        In today's professional landscape, teams grapple with an overwhelming
        amount of unstructured data—contracts, policies, claims, financial
        statements—often trapped in formats like PDFs and spreadsheets. While
        other sectors scale their outputs with advanced software and
        infrastructure, legal, insurance, and finance teams are limited by
        manual data processing and headcount constraints. We've witnessed
        firsthand how this bottleneck leads to inefficiencies and hampers growth
        within these sectors.
      </p>
      <p>
        While other sectors scale their outputs with advanced software and
        infrastructure, legal, insurance, and finance teams are limited by
        manual data processing and headcount constraints. We've witnessed
        firsthand how this bottleneck leads to inefficiencies and hampers growth
        within these sectors.
      </p>
    </article>
    <section class="col-start-4 col-span-3 o-grid-inner [&>*]:col-span-6">
      <div class="flex flex-col gap-3">
        <h3 class="font-medium">Skills</h3>
        <ul>
          <li>User Experience Design</li>
          <li>User Interface Design</li>
          <li>Web Design</li>
          <li>Design Systems</li>
          <li>Front-end Web Development</li>
          <li>iOS App Development</li>
        </ul>
      </div>
      <div class="flex flex-col gap-3">
        <h3 class="font-medium">Services</h3>
        <ul>
          <li>User Experience Design</li>
          <li>User Interface Design</li>
          <li>Web Design</li>
        </ul>
      </div>
    </section>
  </section>
  <section class="col-span-full o-grid-inner">
    <header class="col-span-3">
      <h2 class="t--hero dark:text-white">Work <em>experience</em></h2>
    </header>
    <ul
      class="col-span-3 divide-y divide-neutral-200 dark:divide-neutral-800 [&>li]:py-3 [&>li]:flex [&>li]:items-center [&>li]:justify-between"
    >
      {
        projectsOrder.map((projectId) => {
          const project = sortedWork.find(
            (p: any) => p.data.name.toLowerCase() === projectId
          );
          if (!project) return null;
          return (
            <li>
              <a
                href={`/#${project.data.name.toLowerCase()}`}
                class="hover:text-orange-500 transition-colors"
              >
                {project.data.name}
              </a>
              <div class="flex gap-2 items-center">
                <span>{project.data.startDate}</span>
                <span class="font-[system-ui,sans-serif]">&rarr;</span>
                <span>{project.data.endDate || "Now"}</span>
              </div>
            </li>
          );
        })
      }
    </ul>
  </section>
</MasterLayout>
